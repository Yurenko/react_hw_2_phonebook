{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContastForm/ContactForm.module.css","components/ContastForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","sortName","contacts","some","contact","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","alert","addUser","this","onSubmit","className","style","form","htmlFor","type","pattern","title","required","id","onChange","Component","PropsType","PropTypes","string","defaultProps","Filter","filter","handleFilter","example","handleDelete","length","map","item","button","onClick","App","user","add","shortid","generate","i","toLowerCase","includes","ls","localStorage","getItem","items","JSON","parse","prevState","setItem","stringify","FilterUsr","ContactList","ProrTypes","array","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6550ff1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__3C0Ho\",\"button\":\"ContactList_button__2DyY1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3R3wV\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static PropsType = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n  };\n\n  static defaultProps = {\n    name: '',\n    number: '',\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  sortName = (contacts, name) =>\n    contacts.some(contact => contact.name === name);\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    const { value } = e.target.name;\n    e.preventDefault();\n    const i = this.sortName(this.props.contacts, value);\n    if (!i) {\n      this.props.addUser({ ...this.state });\n    } else {\n      alert(`${value} is already in contacts`);\n    }\n\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={style.form}>\n        <label htmlFor=\"name\">\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            id=\"name\"\n            onChange={this.handleChange}\n          />\n        </label>\n        <label htmlFor=\"namber\">\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            id=\"number\"\n            value={number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\">submit</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\n\nfunction Filter({ filter, handleFilter }) {\n  return (\n    <input\n      type=\"text\"\n      name=\"name\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      required\n      value={filter}\n      onChange={handleFilter}\n    />\n  );\n}\n\nexport default Filter;\n","import React from 'react';\nimport style from './ContactList.module.css';\n\nfunction Filter({ example, handleDelete }) {\n  return (\n    <div className={style.contacts}>\n      <span>Find contacts by name</span>\n      {example.length > 0 && (\n        <ul>\n          {example.map(item => (\n            <li key={item.id}>\n              {item.name} : {item.number}\n              <button\n                className={style.button}\n                type=\"submit\"\n                onClick={() => handleDelete(item.id)}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\n\nimport ContactForm from './components/ContastForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nconst FilterUsr = (contacts, filter) =>\n  contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\nclass App extends Component {\n  static defaultProps = {\n    contact: [],\n    filter: '',\n  };\n\n  static ProrTypes = {\n    contact: PropTypes.array,\n    filter: PropTypes.string,\n  };\n\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const ls = localStorage.getItem('contacts');\n    const items = JSON.parse(ls);\n\n    if (!items) return;\n    this.setState({ contacts: [...items] });\n  }\n\n  componentDidUpdate(prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  addUser = user => {\n    const add = {\n      name: user.name,\n      number: user.number,\n      id: shortid.generate(),\n    };\n\n    this.setState(state => ({\n      contacts: [...state.contacts, add],\n    }));\n  };\n\n  handleFilter = e => {\n    const { contacts, filter } = this.state;\n    const { value } = e.target;\n    this.setState({ filter: value });\n    contacts.filter(i => i.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  handleDelete = id => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const example = FilterUsr(contacts, filter);\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm addUser={this.addUser} contacts={contacts} />\n\n        <h2>Contacts</h2>\n        <Filter filter={filter} handleFilter={this.handleFilter} />\n        <ContactList example={example} handleDelete={this.handleDelete} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}